


SHELL=/bin/bash

CC       = mpicc
OPTIMIZE = -O2 -Wall -finline-functions -fcommon -std=c11
#OPTIMIZE += -DDebug

# test whether Intel OneAPI MKL exists
ifneq (${MKLROOT},)
  FlagIntelMKL = true
endif
ifeq (${FlagIntelMKL}, true)
  OPTIMIZE += -DIntelMKL
endif

#------------target system---------
#SYSTEM="Darwin"
SYSTEM="Linux"
#SYSTEM="Cluster"
#SYSTEM="TianheII"

#=======================================================
# make editing according to your system's configurations
ifeq ($(SYSTEM), "Linux")
GSL_INCL    = $(shell pkg-config --cflags gsl) 
GSL_LIBS    = $(shell pkg-config --libs gsl) 

ifeq (${FlagIntelMKL}, true)
  LAPACK_INCL = -I${MKLROOT}/include
  LAPACK_LIBS = -L${MKLROOT}/lib -lmkl_intel_ilp64 -lmkl_core -lmkl_gnu_thread -lgomp -lpthread 
else 
  LAPACK_INCL = $(shell pkg-config --cflags lapack) 
  LAPACK_LIBS = $(shell pkg-config --libs lapack lapacke)
endif

#MPICHINCL     = $(shell pkg-config --cflags mpich) 
#MPICHLIB      = $(shell pkg-config --libs mpich) 

#HWLOC_INCL    = $(shell pkg-config --cflags hwloc) 
#HWLOC_LIBS    = $(shell pkg-config --libs hwloc) 
endif

ifeq ($(SYSTEM), "Darwin")
GSL_INCL    = $(shell pkg-config --cflags gsl) 
GSL_LIBS    = $(shell pkg-config --libs gsl) 

ifeq (${FlagIntelMKL}, true)
  LAPACK_INCL = -I${MKLROOT}/include
  LAPACK_LIBS = -L${MKLROOT}/lib -lmkl_intel_ilp64 -lmkl_core -lmkl_gnu_thread -lgomp -lpthread 
else 
  LAPACK_INCL = $(shell pkg-config --cflags lapack) 
  LAPACK_LIBS = $(shell pkg-config --libs lapack lapacke)
endif

#MPICHINCL     = $(shell pkg-config --cflags mpich) 
#MPICHLIB    = $(shell pkg-config --libs mpich) 

HWLOC_INCL    = $(shell pkg-config --cflags hwloc) 
HWLOC_LIBS    = $(shell pkg-config --libs hwloc) 
endif

ifeq ($(SYSTEM), "Cluster")
GSL_INCL = -I/sharefs/mbh/user/liyanrong/soft/gsl/include
GSL_LIBS = -L/sharefs/mbh/user/liyanrong/soft/gsl/lib  -lgsl -lgslcblas -lm
MPICHLIB = -L/sharefs/mbh/user/liyanrong/soft/mpich3/lib -lmpich
MPIINCL  = -I/sharefs/mbh/user/liyanrong/soft/mpich3/include
LAPACK_INCL = -I/sharefs/mbh/user/liyanrong/soft/lapack/include
LAPACK_LIBS = -L/sharefs/mbh/user/liyanrong/soft/lapack/lib -llapacke -llapack -lgfortran

#DNEST_INCL  = -I /sharefs/mbh/user/liyanrong/GIT/DNest/
#DNEST_LIBS  = -L /sharefs/mbh/user/liyanrong/GIT/DNest -ldnest
endif

ifeq ($(SYSTEM), "TianheII")
GSL_INCL =
GSL_LIBS = -lgsl -lgslcblas -lm
MPICHLIB = -lmpich
MPIINCL  =
LAPACK_INCL = -I/HOME/ihep_yrli_1/BIGDATA/soft/lapack/include
LAPACK_LIBS = -L/HOME/ihep_yrli_1/BIGDATA/soft/lapack/lib -llapacke -llapack -lgfortran

#DNEST_INCL  = -I /HOME/ihep_yrli_1/BIGDATA/soft/DNest/
#DNEST_LIBS  = -L /HOME/ihep_yrli_1/BIGDATA/soft/DNest -ldnest
endif
#=======================================================

EXEC     = mica2
SRC      = ./src
CDN      = ./cdnest
CDN_INCL = -I$(CDN)
SRC_INCL = -I$(SRC)
OBJS     = $(SRC)/main.o $(SRC)/allvars.o $(SRC)/system.o $(SRC)/run.o        \
           $(SRC)/dnest_con.o  $(SRC)/dnest_line.o $(SRC)/read.o              \
           $(SRC)/mc_con.o $(SRC)/init.o $(SRC)/mathfun.o                     \
           $(SRC)/mc_line.o  $(SRC)/error.o  ${SRC}/version.o                 \
           $(SRC)/line_decomp.o $(SRC)/dnest_pmap.o $(SRC)/mc_pmap.o          \
	         $(CDN)/dnest.o  $(CDN)/dnestpostprocess.o                          \
	         $(CDN)/dnestvars.o $(SRC)/mc_vmap.o $(SRC)/dnest_vmap.o            \
           $(SRC)/mygetopt.o
  
INCL     = Makefile_old $(SRC)/allvars.h $(SRC)/proto.h  $(SRC)/dnest_con.h   \
           $(SRC)/dnest_line.h $(SRC)/version.h $(SRC)/dnest_pmap.h           \
	         $(CDN)/dnest.h $(CDN)/dnestvars.h $(SRC)/dnest_vmap.h              \
           $(SRC)/mygetopt.h

OPTIONS  = $(OPTIMIZE)
CFLAGS   = $(OPTIONS) $(GSL_INCL) $(LAPACK_INCL) $(MPICHINCL) $(DNEST_INCL) $(FFTW_INCL) \
           $(CDN_INCL) $(HWLOC_INCL) $(SRC_INCL)
           
LIBS     = $(GSL_LIBS) $(LAPACK_LIBS) $(MPICHLIB) $(FFTW_LIBS) $(HWLOC_LIBS)

$(EXEC):$(OBJS)
	cd $(SRC)
	$(CC) $(OBJS) $(LIBS) -o $@

$(OBJS): $(INCL)

clean:
	rm -f $(OBJS) $(EXEC)
